@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 215 28% 12%;
    --foreground: 210 40% 98%;

    --card: 217 25% 16%;
    --card-foreground: 210 40% 98%;

    --popover: 217 25% 16%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 100% 56%;
    --primary-foreground: 215 28% 12%;

    --secondary: 217 25% 20%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217 25% 20%;
    --muted-foreground: 215 20% 65%;

    --accent: 189 94% 43%;
    --accent-foreground: 215 28% 12%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;

    --border: 217 25% 24%;
    --input: 217 25% 24%;
    --ring: 210 100% 56%;

    --radius: 0.5rem;

    --gold: 45 100% 51%;
    --gold-foreground: 215 28% 12%;

    --chart-1: 210 100% 56%;
    --chart-2: 189 94% 43%;
    --chart-3: 200 98% 39%;
    --chart-4: 220 90% 56%;
    --chart-5: 230 84% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', system-ui, -apple-system, sans-serif;
  }
}

@layer utilities {
  .gradient-blue {
    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--accent)) 100%);
  }

  .gradient-blue-dark {
    background: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(215 28% 8%) 100%);
  }

  .glass-effect {
    background: rgba(26, 35, 50, 0.7);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .text-gold {
    color: hsl(var(--gold));
  }

  .animate-slide-in-left {
    animation: slideInLeft 0.3s ease-out;
  }

  .animate-slide-out-left {
    animation: slideOutLeft 0.3s ease-out;
  }

  @keyframes slideInLeft {
    from {
      transform: translateX(-100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideOutLeft {
    from {
      transform: translateX(0);
      opacity: 1;
    }
    to {
      transform: translateX(-100%);
      opacity: 0;
    }
  }
}
